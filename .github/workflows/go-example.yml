name: hello-server

on:
  push:
    branches:
      - main
  schedule:
    - cron: '*/15 * * * 1-6'  # Executa de 15 em 15 minutos de segunda a s√°bado

env:
  FILE_NAME: 'hello-server'
  GO_VERSION: '1.20'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build for Linux
        run: go build -o ${{ env.FILE_NAME }} ${{ env.FILE_NAME }}.go

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux
          path: ${{ env.FILE_NAME }}

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build for Windows
        run: go build -o ${{ env.FILE_NAME }}.exe ${{ env.FILE_NAME }}.go

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows
          path: ${{ env.FILE_NAME }}.exe

  lint_and_test:
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies and run linting
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install flake8
          flake8 .

      - name: Run unit tests with pytest
        run: pytest --junitxml=test-results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.xml

  download-and-run-linux:
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: linux

      - name: Run script
        run: |
          source ./run.sh

  download-only-windows:
    runs-on: windows-latest
    needs: build-windows
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: windows