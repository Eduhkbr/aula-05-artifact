name: hello-server

on:
  push:
    branches:
      - main
  schedule:
    - cron: '*/15 * * * 1-6'  # Executa de 15 em 15 minutos de segunda a s√°bado

env:
  FILE_NAME: 'hello-server'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            extension: ''
          - os: windows-latest
            goos: windows
            goarch: amd64
            extension: '.exe'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20

      - name: Build
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ${{ env.FILE_NAME }}${{ matrix.extension }} ${{ env.FILE_NAME }}.go

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: ./${{ env.FILE_NAME }}${{ matrix.extension }}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with Flake8
        run: |
          pip install flake8
          flake8 .

      - name: Run unit tests with pytest
        run: pytest --junitxml=test-results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.xml
