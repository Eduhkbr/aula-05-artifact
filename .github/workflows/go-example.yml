name: hello-server

on:
  push:
    branches:
      - main
  schedule:
    - cron: '*/15 * * * 1-6'  # Executa de 15 em 15 minutos de segunda a sábado

env:
  FILE_NAME: 'hello-server'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build for Linux
        run: go build $FILE_NAME.go

      - name: Build for Windows
        run: GOOS=windows GOARCH=amd64 go build $FILE_NAME.go

      - name: Upload artifact for linux
        uses: actions/upload-artifact@v1.0.0
        with:
          name: linux
          path: ./${{ env.FILE_NAME }}

      - name: Upload artifact for windows
        uses: actions/upload-artifact@v1.0.0
        with:
          name: windows
          path: ./${{ env.FILE_NAME }}.exe

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8  # Escolha a versão do Python desejada

      - name: Install dependencies
        run: pip install -r requirements.txt  # Se você tiver um arquivo requirements.txt

      - name: Lint with Flake8
        run: |
          pip install flake8
          flake8 .

      - name: Run unit tests with pytest
        run: pytest --junitxml=test-results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: test-results.xml
  download-and-run-linux:
    runs-on: ubuntu-latest
    needs: build-go
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: linux
          path: ./

      - name: Run script
        run: source ./run.sh

  download-only-windows:
    runs-on: windows-latest
    needs: build-go
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows
          path: ./